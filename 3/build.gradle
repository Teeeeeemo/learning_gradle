group 'me.khrystal.gradle'
//project.setGroup('me.khrystal.gradle')
version '1.0-SNAPSHOT'


apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    // 当有多个仓库时 会按照仓库的顺序寻找jar包
    // 私服应该写到最上面 优先使用私服
//    maven{
//        url ''
//    }
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'ch.qos.logback:logback-classic:1.3.0-alpha4'
    // 排除hibernate-core下的slf4j-api传递性依赖
    compile('org.hibernate:hibernate-core:3.6.3.Final') {
        exclude group:"org.slf4j", module:"slf4j-api"
        // 注: 这里的module就是jar包的`name`属性
    }
}

// 声明一个闭包 这个闭包的作用是创建目录
def createDir = {
    path ->
        File dir = new File(path)
        if (!dir.exists()) {
            dir.mkdirs()
        }
}
// 自定义task
task makeJavaDir() {
    def paths = ['src/main/java', 'src/main/resources', 'src/test/java', 'src/test/resources'];
    // 添加动作
    doFirst {
        // 遍历path 执行闭包创建目录操作
        paths.forEach(createDir)
    }

}

// 自定义task 创建Web工程目录 因为Web工程目录包含Java工程目录 因此可以进行task依赖
// Web工程只需要创建特有的工程目录就可以了
task makeWebDir() {
    // 声明依赖任务 注意 必须在函数中执行 动作执行阶段不允许依赖任务！
    dependsOn 'makeJavaDir'
    def paths = ['src/main/webapp', 'src/test/webapp']
    doLast {
        paths.forEach(createDir)
    }
}

// 出现版本冲突 抛出异常 显示冲突jar包
//configurations.all{
//    resolutionStrategy{
//        failOnVersionConflict()
//        force 'org.slf4j:slf4j-api:1.7.24'
//    }
//}

// 强制使用1.7.24版本
//configurations.all{
//    resolutionStrategy{
//        force 'org.slf4j:slf4j-api:1.7.24'
//    }
//}